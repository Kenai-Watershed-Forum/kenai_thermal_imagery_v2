---
title: "Water Temperature Loggers"
editor: visual
---

```{r , include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
# clear environment
rm(list=ls())

# load packages
library(bookdown)
library(tidyverse)
library(googlesheets4)
library(lubridate)
library(readr)
library(readxl)
library(writexl)
library(hms)
library(plotly)
library(DT)
library(xlsx)
library(leaflet)
library(DT)
library(ggpubr)
library(ggpmisc)
library(plotrix)
library(packrat)
library(foreign)

# set plotting themes

## geom_col plots theme
col_theme <- theme(axis.title = element_text(size = 14, face = "bold"),
                   strip.text = element_text(size = 14, face = "bold"),
                   legend.title = element_text(size = 14, face = "bold"),
                   legend.text = element_text(size = 14),
                   axis.text = element_text(size = 14))

## geom_points plots theme
points_theme <- theme(axis.title = element_text(size = 14, face = "bold"),
                   strip.text = element_text(size = 14, face = "bold"),
                   legend.title = element_text(size = 14, face = "bold"),
                   legend.text = element_text(size = 14),
                   axis.text = element_text(size = 11, face = "bold"),
                   title = element_text(size = 18))

# function to exclude multiple items per column
'%ni%' <- Negate('%in%')

# clarify select function
select <- dplyr::select
```

## Introduction

In order to supplement aerial thermal infrared imagery and cold-feature ground truthing data, we deployed water temperature loggers in the lower reach of each study stream to collect continuous time series of water temperature. We used Onset HOBO Temp Pro V2 loggers, deployed and maintained according to published regional standards [@mauger2015a].

This section describes methods to visualize and perform basic quality checks on continuous temperature loggers deployed in the study streams. All data files (.csv) used in these analyses can be downloaded from this project's [GitHub repository](https://github.com/Kenai-Watershed-Forum/kenai_thermal_imagery/tree/master/input).

## Locations

See the Project Map (Section 2) section of this report for locations of water temperature logger sites. The ArcGIS Online layer titled, "Water Temperature Logger Sites" displays these locations.

Locations will also be reflected in the Alaska Center for Conservation Science's AKOATS map ([Alaska Online Aquatic Temperature Site](https://accs.uaa.alaska.edu/aquatic-ecology/akoats/))[^temperature_loggers-1] in Spring 2023.

[^temperature_loggers-1]: https://accs.uaa.alaska.edu/aquatic-ecology/akoats/

<br>

## Logger Data QA/QC

Data retrieved from the field was subjected to a basic quality assurance process before being incorporated into the analysis dataset. We visually inspected each water temperature time series and excluded data indicative of pre/post deployment or exposure. @fig-preqa and @fig-postqa provide a visual example of water temperature time series prior to and post quality assurance processes.

```{r, echo = F}
## read in logger data

# beaver creek
# we have logger data both from the KWF site and the nearby (~200 m upstream) UAA site

## read in KWF files
dir <- "input/temperature_logger_data/beaver_creek/csv_files/kwf/"
kwf_beaver_files <- list.files(dir)

kwf_beaver_creek <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # assign new columns
  mutate(site = "kwf_beaver_creek",
         org = "KWF") %>%
  mutate(date_time = mdy_hms(paste(date, time))) %>%
  select(-date,-time) 

## read in UAA files
dir <- "input/temperature_logger_data/beaver_creek/csv_files/uaa/"
uaa_beaver_files <- list.files(dir)

uaa_beaver_creek <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # correct format to match kwf files
  select(date_time,temp_C,logger_id) %>%
  transform(date_time = mdy_hm(date_time)) %>%
  # assign new columns
  mutate(site = "uaa_beaver_creek",
         org = "UAA") 
  
# combine UAA and KWF data to single dataframe, prep columns
beaver_creek <- bind_rows(kwf_beaver_creek,uaa_beaver_creek) 


# ******************************

# funny river

dir <- "input/temperature_logger_data/funny_river/csv_files"
funny_files <- list.files(dir)

funny_river <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # assign new columns
  mutate(site = "funny_river",
         org = "KWF") %>%
  transform(date_time = mdy_hm(date_time))


# ******************************

# moose river

dir <- "input/temperature_logger_data/moose_river/csv_files"
moose_files <- list.files(dir)

moose_river <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # assign new columns
  mutate(site = "moose_river",
         org = "KWF") %>%
  transform(date_time = mdy_hm(date_time))


# ******************************

# lower crooked creek

dir <- "input/temperature_logger_data/lower_crooked_creek/csv_files"
lower_crooked_files <- list.files(dir)

lower_crooked_creek <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # assign new columns
  mutate(site = "lower_crooked_creek",
         org = "KWF") %>%
  transform(date_time = mdy_hm(date_time))


# ******************************
  
# lower crooked creek - real time logger (Beaded Stream)
# https://inletkeeper.org/our-work/healthy-habitat/real-time-temperature-sites/crooked-creek/
# download latest version of this file from inletkeeper site before republishing this document

# 10/27/2021

# in 2021, data streamed from site until 10/6/2021; after which the subscription expired. Requires subscription renewal to access further data.

# upon examining the data, it appears that 2017-08-14 14:43:00 is the date/time that data begins reliably streaming. remove data prior to this from dataset here.

original_start_time <- as.POSIXct("2017-08-14 14:43:00",origin = "1970-01-01")

dir <- "input/real_time_temp_sensor/"

lower_crooked_realtime_file <- as.character(list.files(dir))

lower_crooked_creek_realtime <- read_csv(paste0(dir,lower_crooked_realtime_file), skip = 3) %>%
  # assign new columns
  mutate(site = "lower_crooked_creek_realtime",
         org = "CIK",
         logger_id = "realtime") %>%
  filter(!is.na("Water Temp")) %>%
    # rename columns to match others
  rename("temp_C" = "Water Temp",
         "date_time" = "Transmit Time (AKDT)",
         "record_id" = "Record ID") %>%
  select(site,org,logger_id,temp_C,date_time,record_id) %>% 
  mutate(year = year(date_time)) %>%
  
  # remove erroneous year 2009 and 2010 values
  filter(date_time > original_start_time)  
  

# ******************************

# upper crooked creek

dir <- "input/temperature_logger_data/upper_crooked_creek/csv_files"
upper_crooked_files <- list.files(dir)

upper_crooked_creek <- list.files(path = dir,
              pattern="*.csv", 
              full.names = T) %>% 
    map_df(~read_csv(.)) %>%
  # assign new columns
  mutate(site = "upper_crooked_creek",
         org = "KWF") %>%
  transform(date_time = mdy_hm(date_time))


# ******************************
# ******************************
# ******************************

# combine data from all sites into single dataframe
dat <- bind_rows(beaver_creek,
                 funny_river,
                 moose_river,
                 lower_crooked_creek,
                 upper_crooked_creek) %>%
  transform(logger_id = as.character(logger_id)) %>%
  bind_rows(lower_crooked_creek_realtime) %>%
  mutate(day = yday(date_time),
         year = year(date_time)) %>%
  select(temp_C,logger_id,site,org,date_time,day,year) %>%
  distinct()

```

```{r preqa, echo = F}
#| label: fig-preqa
#| fig-cap: "Example of water temperature time series prior to quality assurance process"

# Exclude segments of time series where loggers are exposed (pre/post deployment or low water)

# what are all our unique loggers?
loggers <- as.data.frame(unique(dat$logger_id))


# create ggplotly chart for each time series, one at a time, by remove hashtag from logger id

## double-hashtag indicates that visual inspection was performed and flagged data identified in "input/temperature_logger_data/flagged_data.csv". Single hashtag indicates that visual inspection has not yet been performed

## logger <-              "20012591"
## logger <-              "20635545"
## logger <-              "20861017"
 logger <-              "20861019"
## logger <-              "20861209"
## logger <-              "20861215"
## logger <-              "10816958"
## logger <-              "20635544"
## logger <-              "20861027"
## logger <-              "20861028"
## logger <-              "20012607"
## logger <-              "20012612"
## logger <-              "20861024"
## logger <-              "20861029"
## logger <-              "10816959"
## logger <-              "20012598"
## logger <-              "20012594"
## logger <-              "20861018"
## logger <-              "20861022"
## logger <-              "20861016"
## logger <-              "20861023"
## logger <-              "realtime"
 

# plot
ggplotly(
  p <- dat %>%
  # modified site one at a time here to visually inspect datasets
  filter(logger_id == logger
         ) %>%
  
  ggplot(aes(date_time,temp_C, label = day)) +
  geom_point() +
  ggtitle(paste("Logger",logger, "pre-inspection")),
  # plot size
  height = 350, width = 600
  )


# mystery: the csv file for 20012591 exhibits odd behavior, shows multiple observations. source unclear 10/19/21. inspected csv files to no amend. excluded from analyses for now.

```

```{r, include = F}
# read in file of visually identified flagged data
flagged_data <- read.csv("input/temperature_logger_data/flagged_data.csv") %>%
  select(-notes)

# apply useData = 0 flags to flagged data
flagged_data <- inner_join(dat,flagged_data) %>%
  filter(day >= day_start & day <= day_stop) %>%
  mutate(useData = 0) %>%
  select(-day_start,-day_stop)

# apply useData = 1 to non-flagged data
nonflagged_data <- anti_join(dat,flagged_data) %>%
  mutate(useData = 1)

# rejoin flagged and non-flagged data in same dataframe
dat <- bind_rows(flagged_data,nonflagged_data)

```

<br>

```{r post-qa, echo = F}
#| label: fig-postqa
#| fig-cap: "Example of water temperature time series after quality assurance inspection"

# create ggplotly chart with flagged data removed
ggplotly(
  p <- dat %>%
  # modified site one at a time here to visually inspect datasets
  filter(logger_id == logger,
         useData == 1
         ) %>%
  
  ggplot(aes(date_time,temp_C, label = day)) +
  geom_point() +
  ggtitle(paste("Logger",logger,"post-inspection")),
  height = 350, width = 600
  )

```

<br>

### Additional data preparation

The following sections describe additional details on data preparation specific to each water temperature logger site.

#### Beaver Creek

Loggers at the Beaver Creek logger site were deployed in early summer 2020. As part of a separate research project, Alaska Center for Conservation Science (University of Alaska Anchorage) established a logger site several hundred meters upstream also in Summer 2020.

We examined if data from the two sites are similar enough to use as a proxy for each other when data observations are missing. Time series from both sites are shown in figure @fig-bc-plots, and simultaneous values from both sites are presented in figure @fig-bc-reg.

```{r bc-data-prep, echo = F}

bc_dat <- dat %>%
  filter(site %in% c("kwf_beaver_creek","uaa_beaver_creek"),
         useData == 1) %>%
  group_by(site,date_time) %>%
  summarise(temp_C = mean(temp_C)) %>%
  pivot_wider(names_from = site, values_from = temp_C) %>%
  filter(!is.na(uaa_beaver_creek))
```

```{r bc-plots, echo = F, out.width = "70%", out.height="70%"}
#| label: fig-bc-plots
#| fig-cap: "Water temperature time series from Lower Beaver Creek at two nearby sites."

bc_dat %>%
  pivot_longer(cols = c("kwf_beaver_creek","uaa_beaver_creek"), 
               names_to = "site", 
               values_to = "temp_C") %>%
  ggplot(aes(date_time,temp_C)) +
  facet_grid(site ~ .) +
  geom_point(size = 0.5) +
  xlab("")
  
```

<br>

```{r bc-reg, echo = F, out.width = "70%", out.height="70%"}
#| label: fig-bc-reg
#| fig-cap: "Regression of simultaneous water temperature observations from two nearby sites in Beaver Creek."

bc_dat %>%
  ggplot(aes(kwf_beaver_creek,uaa_beaver_creek)) +
  geom_point() +
  ylim(9,18) +
  geom_smooth(method = 'lm') +
  stat_poly_eq(formula = y ~ x, 
                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
                parse = TRUE) +
  labs(title = paste("Total observations: n =", nrow(bc_dat)))

```

```{r, echo = F}
# mean difference
bc_diff <- bc_dat %>%
  mutate(diff = abs(kwf_beaver_creek - uaa_beaver_creek)) %>%
  filter(!is.na(diff)) %>%
  summarise(avg_diff = mean(diff)) 
bc_diff <- format(round(bc_diff$avg_diff, 2 ), nsmall = 2)

# stdev of difference
bc_diff_sd <- bc_dat %>%
  mutate(diff = abs(kwf_beaver_creek - uaa_beaver_creek)) %>%
  filter(!is.na(diff)) %>%
  summarise(sd_diff = sd(diff))
bc_diff_sd <- format(round(bc_diff_sd$sd_diff, 2 ), nsmall = 2)
```

The average absolute difference in temperature between the two logger sites in Beaver Creek is `r bc_diff` ± `r bc_diff_sd` C (mean ± sd). For most applications, a substitution of data from either of these sites in Lower Beaver Creek will still accurately represent water temperature.

<br>

#### Lower Crooked Creek

Lower Crooked Creek has two adjacent water temperature monitoring locations within 20 m of each other. Further details on these two sites are described below, and figure \@fig-cc-map shows locations of the two sites.

```{r fig-cc-map, echo = F, out.height=400, out.height=400}

#| label: fig-cc-map
#| fig-cap: "Lower Crooked Creek temperature monitoring sites"

knitr::include_graphics('images/lower_crooked_creek_temp_logger_map.png')

```

##### Lower Crooked Creek Real-time temperature monitoring site

Cook Inletkeeper maintains a site installed by Beaded Stream (Anchorage, AK) that records air and water temperature data in real-time and streams these data live at <https://inletkeeper.org/our-work/healthy-habitat/real-time-temperature-sites/crooked-creek/>. Water and air temperature data has been recorded and streamed from this site at hourly intervals since summer 2017.

Temperature data from this location can be downloaded as a csv file directly from the above Inletkeeper web link. However, ***as of `r Sys.Date()` there is an error with the publicly available csv file***. The publicly available csv file has incorrect time stamps after 12/31/2019. Beaded Stream staff is aware of the error, and says the remedy will require an in-person visit to the field. In the mean time, [contact Beaded Stream staff](http://www.beadedstream.com/contact/) to request access to most current data.

The data with correct time stamps from 2017-08-15 though 2021-10-26, obtained directly from the internal Beaded Stream dashboard, is also available for download at this link from GitHub: [**Download Lower Crooked Creek Realtime Temperature Data**](https://github.com/Kenai-Watershed-Forum/kenai_thermal_imagery/tree/master/input/real_time_temp_sensor).

##### Lower Crooked Creek HOBO TempPro V2 logger site

A pair of HOBO Temp Pro V2 loggers are installed at a location 20 m upstream from the real-time temperature logger site. Water temperature is recorded at 15 minute intervals.

During a site visit on 7/28/2021, we discovered that this pair of loggers potentially resided within a small, previously unidentified cold water plume incoming from the river-left bank. (On the ArcGIS Online project map, this feature is identified as "tributary_44." It was unclear if the local cold water seep was influencing the loggers in way such that they would not represent main channel temperature.

In order to determine if HOBO logger data prior to 7/28/2021 is influenced by the cold seep, we performed the following steps:

1.  *Relocated loggers.* On 7/28/2021, we modified logger deployment such that one logger was directly upstream of the cold water seep, and one remained in its original location within the seep.

2.  *Compared temperature data upstream vs. downstream of the seep.* We observed consistently cooler temperatures in the downstream logger, with an average absolute difference of 1.47 ± 0.30 °C (mean ± sd). Figure \@fig-cc-plots displays time series from both loggers as well as the difference values where simultaneous data from both locations exists.

From these data we observe that the small cold water tributary consistently affected main stem temperature where the loggers recorded temperature. Temperature contrast was much less apparent in cooler months, after approximately September 1st, 2021. Thus, the data from these HOBO loggers prior to 7/28/2021 in the location downstream of the small cold water tributary should not be considered representative of main channel Crook Creek temperatures.

We reviewed all paper field forms from the lower Crooked Creek site from 2015 - present ([link here](https://docs.google.com/spreadsheets/d/1jfe6u_xr8-abv8HMxyOm88xEsR4ahYTLGPtztjxSivQ/edit?usp=sharing)) to determine the time extent that HOBO loggers may have been influenced by the cold water tributary. These notes suggest that the period extended from from 5/31/2019 - 7/28/2021. Prior to 5/31/2019 there is not evidence on file that can confirm whether or not the loggers were deployed within the cold water plume.

One possible explanation for why technicians failed to observe the cold water seep when they installed the HOBO loggers in Summer 2019 is that high discharge level in the Crooked Creek main channel temporarily masked the localized effect of cold water input. These results highlight the value of regular site visits to re-verify that the site is well-mixed, or checking temperatures beyond the minimum of five observations across a transect.

Additionally, these results exemplify the role of cold water inputs in maintaining thermal refugia for salmonids in watersheds such as Crooked Creek. Note in figure @fig-cc-plots that water temperature within the cold water plume in the main channel was often 1.5 °C cooler than the non-influenced location. Temperature differentials of this nature help allow salmonids to access a diverse portfolio of thermal environments important to functions throughout their life cycle such as migration, metabolism, and foraging.

```{r fig-cc-plots, echo = F, out.width = "70%", out.height="70%"}

#| label: fig-cc-plots
#| fig-cap: "Water temperature time series from Lower Crooked Creek at two nearby loggers (~5 m apart). a.) Upstream of a small coldwater tributary, b.) downstream of small coldwater tributary, c.) difference values between the loggers. Note different y-axis ranges."


# plot of loggers mid-summer 2020 to mid-summer 2021

# according to paper field form records, logger id #20012594 was installed in the upstream position after 7/29/2021 14:30:00. Thus all other spreadsheet files are from loggers in the "downstream" position

lcc_dat <- dat %>%
  filter(useData == 1,
         site == "lower_crooked_creek", 
         !is.na(temp_C)) %>%
  # assign position relative to the cold water seep
  mutate(position = ifelse(logger_id == "20012594","upstream","downstream")) %>%
  
  # create average temperatures where observations are paired from side by side loggers
  group_by(date_time,position) %>%
  summarise(avg_temp_C = mean(temp_C, na.rm = T)) %>%

  # calculate difference values where simultaneous observations exist in different locations
  pivot_wider(names_from = "position", values_from = "avg_temp_C") %>%
  mutate(diff = downstream - upstream) %>%
  
  # restructure dataframe for plot
  pivot_longer(cols = c("upstream", "downstream", "diff"), names_to = "data_type", values_to = "val") %>%
  filter(!is.na(val))

# specify order of facets
lcc_dat$data_type = factor(lcc_dat$data_type, levels=c("upstream","downstream","diff"))
  

# plot two sites & difference values

## facet labels
dat_types <- c(upstream = "a.) Logger upstream\nof cold water tributary",
               downstream = "b.) Logger downstream\n of cold water tributary",
               diff = "c.) Difference\nbetween loggers")


## plot
lcc_dat %>%
  filter(date_time > as.POSIXct("2021-7-29 14:30:00")) %>%
  ggplot(aes(date_time,val)) +
  geom_line(size = 0.5) +
  facet_grid(data_type ~ ., scales = "free_y", labeller = as_labeller(dat_types)) +
  xlab("") +
  ylab("Temperature value (C)") +
  ggtitle("Lower Crooked Creek Hobo Loggers & Difference Values Fall 2021") +
  theme(strip.text.y = element_text(angle = 360))

# stats of differnce between loggers
lcc_stats <- lcc_dat %>%
  ungroup() %>%
  filter(data_type == "diff") %>%
  mutate(abs_val = abs(val)) %>%
  summarise(avg_abs_diff = mean(abs_val),
            sd_abs_diff = sd(abs_val),
            max_abs_diff = max(abs_val))

# create values to print for inline text

## 10/27/2021 -- NOTE - inline code for these values is mysteriously not functioning; blockades render_book() function when put in text. Values are hard coded into text for now.
lcc_avg_abs_diff <- format(round(lcc_stats$avg_abs_diff, 2 ), nsmall = 2)
lcc_sd_abs_diff <- format(round(lcc_stats$sd_abs_diff, 2 ), nsmall = 2)
lcc_max_abs_diff <- format(round(lcc_stats$max_abs_diff, 2 ), nsmall = 2)

  
  
```

<br>

### Extent of water temperature time series

Figure @fig-extent-fig displays temporal extent of currently available water temperature at each site

```{r extent-fig, echo = F}

#| label: fig-extent-fig
#| fig-cap: "Temporal extent of water temperature logger data"


dat %>%
  filter(useData == 1,
         !is.na(date_time)) %>%
  group_by(site) %>%
  summarise(start = min(date_time),
            stop = max(date_time)) %>%
  ggplot(aes(ymin = start,
             ymax = stop,
             x = site)) +
  geom_linerange() + 
  coord_flip()

```
